{"interfaceLanguages":{"swift":[{"children":[{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/mockable\/installation","title":"Installation","type":"article"},{"path":"\/documentation\/mockable\/configuration","title":"Configuration","type":"article"},{"path":"\/documentation\/mockable\/usage","title":"Usage","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/matcher\/comparator","title":"Matcher.Comparator","type":"typealias"},{"path":"\/documentation\/mockable\/matcher\/elementcomparator","title":"Matcher.ElementComparator","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/matcher\/comparator(for:)-42f3b","title":"static func comparator<T>(for: T.Type) -> Matcher.Comparator<T>?","type":"method"},{"path":"\/documentation\/mockable\/matcher\/comparator(for:)-5v4au","title":"static func comparator<T>(for: T.Type) -> Matcher.Comparator<T>?","type":"method"},{"path":"\/documentation\/mockable\/matcher\/comparator(for:)-68pdt","title":"static func comparator<T>(for: T.Type) -> Matcher.Comparator<T>?","type":"method"},{"path":"\/documentation\/mockable\/matcher\/comparator(for:)-6bzwu","title":"static func comparator<T>(for: T.Type) -> Matcher.Comparator<T>?","type":"method"},{"path":"\/documentation\/mockable\/matcher\/register(_:)-2ryjq","title":"static func register<T>(T.Type)","type":"method"},{"path":"\/documentation\/mockable\/matcher\/register(_:)-7avjs","title":"static func register<T>(T.Type.Type)","type":"method"},{"path":"\/documentation\/mockable\/matcher\/register(_:match:)","title":"static func register<T>(T.Type, match: Matcher.Comparator<T>)","type":"method"},{"path":"\/documentation\/mockable\/matcher\/reset()","title":"static func reset()","type":"method"}],"path":"\/documentation\/mockable\/matcher","title":"Matcher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/memberaction\/init(member:action:)","title":"init(member: Member, action: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/memberaction\/action","title":"let action: () -> Void","type":"property"},{"path":"\/documentation\/mockable\/memberaction\/member","title":"let member: Member","type":"property"}],"path":"\/documentation\/mockable\/memberaction","title":"MemberAction","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/memberreturn\/init(member:returnvalue:)","title":"init(member: Member, returnValue: ReturnValue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/memberreturn\/member","title":"let member: Member","type":"property"},{"path":"\/documentation\/mockable\/memberreturn\/returnvalue","title":"let returnValue: ReturnValue","type":"property"}],"path":"\/documentation\/mockable\/memberreturn","title":"MemberReturn","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/mocker\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/mocker\/addinvocation(for:)","title":"func addInvocation(for: Mocker<T>.Member)","type":"method"},{"path":"\/documentation\/mockable\/mocker\/given(_:returnvalue:)","title":"func given(Mocker<T>.Member, returnValue: ReturnValue)","type":"method"},{"path":"\/documentation\/mockable\/mocker\/mock(_:producerresolver:)-6txbp","title":"func mock<V>(Mocker<T>.Member, producerResolver: (Any) throws -> V) throws -> V","type":"method"},{"path":"\/documentation\/mockable\/mocker\/mock(_:producerresolver:)-7x775","title":"func mock(Mocker<T>.Member, producerResolver: (Any) throws -> Void) throws","type":"method"},{"path":"\/documentation\/mockable\/mocker\/perform(_:action:)","title":"func perform(Mocker<T>.Member, action: () -> Void)","type":"method"},{"path":"\/documentation\/mockable\/mocker\/performactions(for:)","title":"func performActions(for: Mocker<T>.Member)","type":"method"},{"path":"\/documentation\/mockable\/mocker\/reset(scopes:)","title":"func reset(scopes: Set<Scope>)","type":"method"},{"path":"\/documentation\/mockable\/mocker\/verify(_:count:assertion:file:line:)","title":"func verify(Mocker<T>.Member, count: Count, assertion: (() -> Bool, () -> String, StaticString, UInt) -> Void, file: StaticString, line: UInt)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/mocker\/action","title":"Mocker.Action","type":"typealias"},{"path":"\/documentation\/mockable\/mocker\/member","title":"Mocker.Member","type":"typealias"},{"path":"\/documentation\/mockable\/mocker\/return","title":"Mocker.Return","type":"typealias"}],"path":"\/documentation\/mockable\/mocker","title":"Mocker","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mockable\/assertionbuilder\/service","title":"Service","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/assertionbuilder\/init(mocker:assertion:)","title":"init(mocker: Mocker<Self.Service>, assertion: MockableAssertion)","type":"init"}],"path":"\/documentation\/mockable\/assertionbuilder","title":"AssertionBuilder","type":"protocol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mockable\/caseidentifiable\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mockable\/caseidentifiable\/id-9wczy","title":"var id: String","type":"property"}],"title":"CaseIdentifiable Implementations","type":"groupMarker"}],"path":"\/documentation\/mockable\/caseidentifiable\/id-1jsi4","title":"var id: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mockable\/caseidentifiable\/name-11t6d","title":"var name: String","type":"property"}],"title":"CaseIdentifiable Implementations","type":"groupMarker"}],"path":"\/documentation\/mockable\/caseidentifiable\/name-6s2ru","title":"var name: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/mockable\/caseidentifiable\/parameters-7v72g","title":"var parameters: String","type":"property"}],"title":"CaseIdentifiable Implementations","type":"groupMarker"}],"path":"\/documentation\/mockable\/caseidentifiable\/parameters-1thvc","title":"var parameters: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/caseidentifiable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mockable\/caseidentifiable","title":"CaseIdentifiable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mockable\/effectbuilder\/service","title":"Service","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/effectbuilder\/init(mocker:)","title":"init(mocker: Mocker<Self.Service>)","type":"init"}],"path":"\/documentation\/mockable\/effectbuilder","title":"EffectBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/matchable\/match(_:)","title":"func match(Self) -> Bool","type":"method"}],"path":"\/documentation\/mockable\/matchable","title":"Matchable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mockable\/mockable\/actionbuilder","title":"ActionBuilder","type":"associatedtype"},{"path":"\/documentation\/mockable\/mockable\/member","title":"Member","type":"associatedtype"},{"path":"\/documentation\/mockable\/mockable\/returnbuilder","title":"ReturnBuilder","type":"associatedtype"},{"path":"\/documentation\/mockable\/mockable\/verifybuilder","title":"VerifyBuilder","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/mockable\/given()","title":"func given() -> Self.ReturnBuilder","type":"method"},{"path":"\/documentation\/mockable\/mockable\/verify(with:)","title":"func verify(with: MockableAssertion) -> Self.VerifyBuilder","type":"method"},{"path":"\/documentation\/mockable\/mockable\/when()","title":"func when() -> Self.ActionBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/mockable\/action","title":"Mockable.Action","type":"typealias"},{"path":"\/documentation\/mockable\/mockable\/return","title":"Mockable.Return","type":"typealias"}],"path":"\/documentation\/mockable\/mockable","title":"Mockable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionactionbuilder\/init(_:kind:)","title":"init(Mocker<T>, kind: FunctionActionBuilder<T, ParentBuilder>.Member)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionactionbuilder\/perform(_:)","title":"func perform(() -> Void) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionactionbuilder\/member","title":"FunctionActionBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/functionactionbuilder","title":"FunctionActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionreturnbuilder\/init(_:kind:)","title":"init(Mocker<T>, kind: FunctionReturnBuilder<T, ParentBuilder, ReturnType, ProduceType>.Member)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionreturnbuilder\/willproduce(_:)","title":"func willProduce(ProduceType) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/functionreturnbuilder\/willreturn(_:)","title":"func willReturn(ReturnType) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionreturnbuilder\/member","title":"FunctionReturnBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/functionreturnbuilder","title":"FunctionReturnBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionverifybuilder\/init(_:kind:assertion:)","title":"init(Mocker<T>, kind: FunctionVerifyBuilder<T, ParentBuilder>.Member, assertion: MockableAssertion)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionverifybuilder\/called(count:file:line:)","title":"func called(count: Count, file: StaticString, line: UInt) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/functionverifybuilder\/member","title":"FunctionVerifyBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/functionverifybuilder","title":"FunctionVerifyBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/genericvalue\/init(value:comparator:)","title":"init(value: Any, comparator: (Any, Any) -> Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/genericvalue\/comparator","title":"let comparator: (Any, Any) -> Bool","type":"property"},{"path":"\/documentation\/mockable\/genericvalue\/value","title":"let value: Any","type":"property"}],"path":"\/documentation\/mockable\/genericvalue","title":"GenericValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyactionbuilder\/init(_:kind:setkind:)","title":"init(Mocker<T>, kind: PropertyActionBuilder<T, ParentBuilder>.Member, setKind: PropertyActionBuilder<T, ParentBuilder>.Member)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyactionbuilder\/performonget(_:)","title":"func performOnGet(() -> Void) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/propertyactionbuilder\/performonset(_:)","title":"func performOnSet(() -> Void) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyactionbuilder\/member","title":"PropertyActionBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/propertyactionbuilder","title":"PropertyActionBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyreturnbuilder\/init(_:kind:)","title":"init(Mocker<T>, kind: PropertyReturnBuilder<T, ParentBuilder, ReturnType>.Member)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyreturnbuilder\/willproduce(_:)","title":"func willProduce(() -> ReturnType) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/propertyreturnbuilder\/willreturn(_:)","title":"func willReturn(ReturnType) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyreturnbuilder\/member","title":"PropertyReturnBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/propertyreturnbuilder","title":"PropertyReturnBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyverifybuilder\/init(_:kind:setkind:assertion:)","title":"init(Mocker<T>, kind: PropertyVerifyBuilder<T, ParentBuilder>.Member, setKind: PropertyVerifyBuilder<T, ParentBuilder>.Member, assertion: MockableAssertion)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyverifybuilder\/gettercalled(count:file:line:)","title":"func getterCalled(count: Count, file: StaticString, line: UInt) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/propertyverifybuilder\/settercalled(count:file:line:)","title":"func setterCalled(count: Count, file: StaticString, line: UInt) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/propertyverifybuilder\/member","title":"PropertyVerifyBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/propertyverifybuilder","title":"PropertyVerifyBuilder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder\/init(_:kind:)","title":"init(Mocker<T>, kind: ThrowingFunctionReturnBuilder<T, ParentBuilder, ReturnType, ProduceType>.Member)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder\/willproduce(_:)","title":"func willProduce(ProduceType) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder\/willreturn(_:)","title":"func willReturn(ReturnType) -> ParentBuilder","type":"method"},{"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder\/willthrow(_:)","title":"func willThrow(Error) -> ParentBuilder","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder\/member","title":"ThrowingFunctionReturnBuilder.Member","type":"typealias"}],"path":"\/documentation\/mockable\/throwingfunctionreturnbuilder","title":"ThrowingFunctionReturnBuilder","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/mockable\/cast(_:)","title":"func cast<P>(Any) throws -> P","type":"func"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/mockable\/mockable()","title":"macro Mockable()","type":"macro"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/mockableassertion","title":"MockableAssertion","type":"typealias"},{"path":"\/documentation\/mockable\/throwingfunctionactionbuilder","title":"ThrowingFunctionActionBuilder","type":"typealias"},{"path":"\/documentation\/mockable\/throwingfunctionverifybuilder","title":"ThrowingFunctionVerifyBuilder","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mockable\/count\/atleastonce","title":"case atLeastOnce","type":"case"},{"path":"\/documentation\/mockable\/count\/exactly(_:)","title":"case exactly(Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/from(_:to:)","title":"case from(Int, to: Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/less(than:)","title":"case less(than: Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/lessorequal(to:)","title":"case lessOrEqual(to: Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/more(than:)","title":"case more(than: Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/moreorequal(to:)","title":"case moreOrEqual(to: Int)","type":"case"},{"path":"\/documentation\/mockable\/count\/never","title":"case never","type":"case"},{"path":"\/documentation\/mockable\/count\/once","title":"case once","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mockable\/count\/init(integerliteral:)","title":"init(integerLiteral: Count.IntegerLiteralType)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mockable\/count\/integerliteraltype","title":"Count.IntegerLiteralType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/count\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/mockable\/count\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/mockable\/count","title":"Count","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mockable\/parameter\/any","title":"case any","type":"case"},{"path":"\/documentation\/mockable\/parameter\/matching(_:)","title":"case matching((Value) -> Bool)","type":"case"},{"path":"\/documentation\/mockable\/parameter\/value(_:)","title":"case value(Value)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/parameter\/erasetogenericvalue()","title":"func eraseToGenericValue() -> Parameter<GenericValue>","type":"method"},{"path":"\/documentation\/mockable\/parameter\/match(_:)-4rnde","title":"func match(Parameter<Value>) -> Bool","type":"method"},{"path":"\/documentation\/mockable\/parameter\/match(_:)-6g8w8","title":"func match(Parameter<Value>) -> Bool","type":"method"},{"path":"\/documentation\/mockable\/parameter\/match(_:)-9xmwk","title":"func match(Parameter<Value>) -> Bool","type":"method"},{"path":"\/documentation\/mockable\/parameter\/match(_:)-lv22","title":"func match(Parameter<Value>) -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mockable\/parameter\/generic(_:)","title":"static func generic<T>(T) -> Parameter<GenericValue>","type":"method"}],"path":"\/documentation\/mockable\/parameter","title":"Parameter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mockable\/producercasterror\/typemismatch","title":"case typeMismatch","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mockable\/producercasterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mockable\/producercasterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/producercasterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mockable\/producercasterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mockable\/producercasterror","title":"ProducerCastError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mockable\/returnvalue\/produce(_:)","title":"case produce(Any)","type":"case"},{"path":"\/documentation\/mockable\/returnvalue\/return(_:)","title":"case `return`(Any)","type":"case"},{"path":"\/documentation\/mockable\/returnvalue\/throw(_:)","title":"case `throw`(Error)","type":"case"}],"path":"\/documentation\/mockable\/returnvalue","title":"ReturnValue","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mockable\/scope\/given","title":"case given","type":"case"},{"path":"\/documentation\/mockable\/scope\/verify","title":"case verify","type":"case"},{"path":"\/documentation\/mockable\/scope\/when","title":"case when","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mockable\/scope\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mockable\/scope\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/mockable\/scope","title":"Scope","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mockable\/swift\/set\/all","title":"static var all: Set<Scope>","type":"property"}],"path":"\/documentation\/mockable\/swift\/set","title":"Set","type":"extension"}],"path":"\/documentation\/mockable\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/mockable","title":"Mockable","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}