{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scopes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Scope","preciseIdentifier":"s:8Mockable5ScopeO","text":"Scope"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"scopes","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The set of scopes to reset (given, effect, verify)."}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mockable\/mocker\/reset(scopes:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker\/reset(scopes:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Resets the state of the mocker."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scopes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:8Mockable5ScopeO"},{"kind":"text","text":">)"}],"title":"reset(scopes:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:8Mockable6MockerC5reset6scopesyShyAA5ScopeOG_tF","modules":[{"name":"Mockable"}]},"hierarchy":{"paths":[["doc:\/\/Mockable\/documentation\/Mockable","doc:\/\/Mockable\/documentation\/Mockable\/Mocker"]]},"references":{"doc://Mockable/documentation/Mockable/Scope":{"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"abstract":[{"type":"text","text":"An enumeration representing different scopes of the Mocker state."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Scope","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/mockable\/scope"},"doc://Mockable/documentation/Mockable/Mocker":{"role":"symbol","title":"Mocker","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mocker"}],"abstract":[{"type":"text","text":"A class responsible for mocking and verifying interactions with a mockable service."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mocker"}],"url":"\/documentation\/mockable\/mocker"},"doc://Mockable/documentation/Mockable":{"role":"collection","title":"Mockable","abstract":[{"type":"text","text":"A macro driven testing framework that provides automatic mock implementations for your protocols. It offers an intuitive declarative syntax that simplifies the process of mocking services in unit tests."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable","kind":"symbol","type":"topic","url":"\/documentation\/mockable"},"doc://Mockable/documentation/Mockable/Mocker/reset(scopes:)":{"role":"symbol","title":"reset(scopes:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scopes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:8Mockable5ScopeO"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Resets the state of the mocker."}],"identifier":"doc:\/\/Mockable\/documentation\/Mockable\/Mocker\/reset(scopes:)","kind":"symbol","type":"topic","url":"\/documentation\/mockable\/mocker\/reset(scopes:)"}}}